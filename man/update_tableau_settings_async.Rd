% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/settings.R
\name{update_tableau_settings_async}
\alias{update_tableau_settings_async}
\title{Write Tableau extension settings}
\usage{
update_tableau_settings_async(
  ...,
  add. = FALSE,
  session. = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{...}{Settings to be persisted, as named arguments. The value should be
suitable for encoding as JSON using \code{jsonlite::toJSON(auto_unbox = TRUE)}.}

\item{add.}{A logical (\code{TRUE}/\code{FALSE}) value. If \code{FALSE} (the default), the
settings provided in \code{...} should replace all existing settings for this
extension. If \code{TRUE}, the settings provided in \code{...} are merged with the
settings that already exist.}

\item{session.}{The Shiny \code{session} object. (You should probably just use the
default.)}
}
\value{
A \link[promises:promise]{promises::promise} object. See Details.
}
\description{
Call \code{update_tableau_settings_async()} from an extension's \code{config_server}
function to write settings that can be read, now and in the future, by
\code{\link[=tableau_setting]{tableau_setting()}}.
}
\details{
While the settings reading functions---\code{\link[=tableau_setting]{tableau_setting()}} and
\code{\link[=tableau_setting_all]{tableau_setting_all()}}---are reactive, \code{update_tableau_settings_async()} is
not. Calling it does not cause any reactive dependencies to be taken.

As implied by the function name, \code{update_tableau_settings_async()} does its
work \href{https://rstudio.github.io/promises/}{asynchronously} (as the actual
persisting of settings must happen through the Tableau Extension API in the
web browser, not directly in R). You can usually ignore this fact, except
that you should ensure that if this function is being called from within an
\code{\link[=observe]{observe()}} or \code{\link[=observeEvent]{observeEvent()}}, that the promise object it returns is the
return value of the observer code block. (This is to alert Shiny to the fact
that this observer can't really be considered done with its execution until
the \code{update_tableau_settings_async()} task is completely finished.)
}
