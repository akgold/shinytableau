% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui.R
\name{tableau_install_link}
\alias{tableau_install_link}
\title{Create a hyperlink to embedding instructions}
\usage{
tableau_install_link(
  ...,
  target = "_blank",
  button = c("no", "primary", "default")
)
}
\arguments{
\item{...}{Attributes and children of the element; these are passed through
to \code{\link[htmltools:builder]{htmltools::a()}}.}

\item{target}{The value of the \code{target} attribute. The default value of
\code{"_blank"} will cause the link to open in a new browser tab or window. Pass
\code{NULL} or \code{"_self"} instead to open in the current frame, or \code{"_top"} to
use the current browser tab but to break out of any iframe.}

\item{button}{If \code{"primary"} or \code{"default"}, Bootstrap CSS classes will be
added to make the link look like a button.}
}
\value{
An HTML object, suitable for including in Shiny UI.
}
\description{
Use this function to create a link that \code{\link[=ext_options]{standalone = TRUE}}
apps can present in their UI, that will bring the user to the Tableau
extension information page (where the manifest information and .trex file
download button are found).
}
\examples{
ui <- function(req) {
  fluidPage(theme = shinytableau_theme(),

    # If we're not currently running in a Tableau dashboard, insert a link
    if (!tableau_is_embedded()) {
      absolutePanel(top = 10, right = 10,
        tableau_install_link("Embed this app in Tableau!")
      )
    },

    # Other UI...
  )
}

}
\seealso{
You can use \code{\link[=tableau_is_embedded]{tableau_is_embedded()}} to prevent the link from
appearing if we're already running in a Tableau dashboard. See the example
below.
}
